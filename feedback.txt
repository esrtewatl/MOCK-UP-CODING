Requirements:
[G] Use Flexbox or Grid system layout for the basic structure of your elements
[R] Be able to navigate to the different pages. For example, clicking on "Login" should bring me to the login page, filling out the information and clicking "login" should then lead me to the dashboard page. Then, clicking "logout" should bring me back to the home page.
[G] You will have 4 pages that are responsive to screen sizes. Each page will include both mobile and desktop views.
[G] Separate your CSS files by pages. Do NOT have one giant CSS file

_ Hardcode any text and don't worry about getting information from somewhere else (...for now)
_ You CAN use reusable components from Bootstrap
_ If you want to make something different from your mockup, that's fine, just don't change too much without keeping track of your changes and modifying the mockup if need be.

General
_ File naming conventions
  -> no spaces
  -> html / css files 
    -> no capitalization
    -> use camelCase.css
    -> use hyphenation-for-spaces.html
_ Use relative units (rem, em, %) 
_ !! AVOID absolute units (px) -> unresponsive designs
_ Great job with browser prefixes
_ fallback fonts
    font-family: roboto, sans serif; 
    // use comma, not semi-colon
    // A semi-colon is the equivalent of the period at the end of this sentence.
_ 3 of 4 pgs responsive 
_ absolute values affect mobile layouts poorly

dashboard.html 
_ love the Hover & Discover search input
_ unresponsive

index.html 
_ responsive
_ Login, ENTER btn do not link to appropriate pages

login.html 
_ responsive

Signup.html 
_ improper naming convention 
  -> signup.html 
  -> signUp.html 
  -> sign-up.html 
_ responsive
_ "Login here" does not link to login.html